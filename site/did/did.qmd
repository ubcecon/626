---
title: "Difference in Diffferences"
author: "Paul Schrimpf"
date: last-modified
execute:
  echo: true
  cache: true
  freeze: auto
format:
  revealjs:
    code-fold: true
    theme: moon
    smaller: true
    min-scale: 0.1
    max-scale: 3.0
    #css: ../styles.css
    chalkboard:
      theme: whiteboard
      boardmarker-width: 2
      chalk-width: 2
      chalk-effect: 0.0
    title-slide-attributes:
      data-background-image: "slesse.jpg"
      data-background-size: contain
bibliography: ../626.bib
engine: julia
---

# Difference in Differences

$$
\def\Er{{\mathrm{E}}}
\def\En{{\mathbb{E}_n}}
\def\cov{{\mathrm{Cov}}}
\def\var{{\mathrm{Var}}}
\def\R{{\mathbb{R}}}
\newcommand\norm[1]{\left\lVert#1\right\rVert}
\def\rank{{\mathrm{rank}}}
\newcommand{\inpr}{ \overset{p^*_{\scriptscriptstyle n}}{\longrightarrow}}
\def\inprob{{\,{\buildrel p \over \rightarrow}\,}}
\def\indist{\,{\buildrel d \over \rightarrow}\,}
\DeclareMathOperator*{\plim}{plim}
$$


## Setup

- Two periods, binary treatment in second period
- Potential outcomes $\{y_{it}(0),y_{it}(1)\}_{t=0}^1$ for $i=1,...,N$
- Treatment $D_{it} \in \{0,1\}$,
    - $D_{i0} = 0$ $\forall i$
    - $D_{i1} = 1$ for some, $0$ for others
- Observe $y_{it} = y_{it}(0)(1-D_{it}) + D_{it} y_{it}(1)$

## Identification

- Average treatment effect on the treated:
$$
\begin{align*}
ATT & = \Er[y_{i1}(1) - \color{red}{y_{i1}(0)} | D_{i1} = 1] \\
& = \Er[y_{i1}(1) - y_{i0}(0) | D_{i1} = 1] - \Er[\color{red}{y_{i1}(0)} - y_{i0}(0) | D_{i1}=1] \\
& \text{ assume } \Er[\color{red}{y_{i1}(0)} - y_{i0}(0) | D_{i1}=1] =  \Er[y_{i1}(0) - y_{i0}(0) | D_{i1}=0] \\
& = \Er[y_{i1}(1) - y_{i0}(0) | D_{i1} = 1] - \Er[y_{i1}(0) - y_{i0}(0) | D_{i1}=0] \\
& = \Er[y_{i1} - y_{i0} | D_{i1}=1, D_{i0}=0] - \Er[y_{i1} - y_{i0} | D_{i1}=0, D_{i0}=0]
\end{align*}
$$

## Important Assumptions

- No anticipation: $D_{i1}=1$ does not affect $y_{i0}$
  - built into the potential outcomes notation we used, relaxing would
  be allowing potential outcomes given sequence of $D$ -- $y_{it}(D_{i0},D_{i1})$

- Parallel trends: $\Er[\color{red}{y_{i1}(0)} - y_{i0}(0) |D_{i1}=1,D_{i0}=0] =  \Er[y_{i1}(0) - y_{i0}(0) | D_{i1}=0], D_{i0}=0]$
  - not invariant to tranformations of $y$


## Estimation

:::.{incremental}

- Plugin:
$$
\widehat{ATT} = \frac{ \sum_{i=1}^n (y_{i1} - y_{i0})D_{i1}(1-D_{i0})}{\sum_{i=1}^n D_{i1}(1-D_{i0})} -  \frac{ \sum_{i=1}^n (y_{i1} - y_{i0})(1-D_{i1})(1-D_{i0})}{\sum_{i=1}^n (1-D_{i1})(1-D_{i0})}
$$

- Regression:
$$
y_{it} = \delta_t + \alpha 1\{D_{i1}=1\} + \beta D_{it} + \epsilon_{it}
$$
then $\hat{\beta} = \widehat{ATT}$

- Fixed effects:
$$
y_{it} = \delta_t + \alpha_i + \beta D_{it} + u_{it}
$$
then $\hat{\beta} = \widehat{ATT}$

:::

# Multiple Periods

## Identification

- Same logic as before,
$$
\begin{align*}
ATT_{t,t-s} & = \Er[y_{it}(1) - \color{red}{y_{it}(0)} | D_{it} = 1, D_{it-s}=0] \\
& = \Er[y_{it}(1) - y_{it-s}(0) | D_{it} = 1, D_{it-s}=0] - \\
& \;\; -  \Er[\color{red}{y_{it}(0)} - y_{t-s}(0) | D_{it}=1, D_{it-s}=0]
\end{align*}
$$

  - assume $\Er[\color{red}{y_{it}(0)} - y_{it-s}(0) | D_{it}=1,  D_{it-s}=0] = \Er[y_{it}(0) - y_{it-s}(0) | D_{it}=0, D_{it-s}=0]$

$$
\begin{align*}
ATT_{t,t-s}& = \Er[y_{it} - y_{it-s} | D_{it}=1, D_{it-s}=0] - \Er[y_{it} - y_{it-s} | D_{it}=0, D_{it-s}=0]
\end{align*}
$$
- Similarly, can identify various other interpretable average
treatment effects conditional on being treated at some times and not others

## Estimation

- Plugin

- Fixed effects?
$$
y_{it} = \beta D_{it} + \alpha_i + \delta_t + \epsilon_{it}
$$
When will $\hat{\beta}^{FE}$ consistently estimate some interpretable conditional average of treatment effects?

## Fixed Effects

- As on problem set 6,
$$
\begin{align*}
\hat{\beta} = & \sum_{i=1,t=1}^{n,T} y_{it} \overbrace{\frac{\tilde{D}_{it}}{ \sum_{i,t} \tilde{D}_{it}^2 }}^{\hat{\omega}_{it}(D_it)} \\
= & \sum_{i=1,t=1}^{n,T} y_{it}(0) \hat{\omega}_{it}(D_it) + \sum_{i=1,t=1}^{n,T} D_{it} (y_{it}(1) - y_{it}(0)) \hat{\omega}_{it}(D_it)
\end{align*}
$$
where
$$
\begin{align*}
\tilde{D}_{it} & = D_{it} - \frac{1}{n} \sum_{j=1}^n (D_{jt} - \frac{1}{T} \sum_{s=1}^T D_{js}) - \frac{1}{T} \sum_{s=1}^T D_{is} \\
& = D_{it} - \frac{1}{n} \sum_{j=1}^n D_{jt} - \frac{1}{T} \sum_{s=1}^T D_{is} + \frac{1}{nT} \sum_{j,s} D_{js}
\end{align*}
$$


## Simulation

- $T$ periods
- Once $i$ treated, remains treated

## Weights

```{julia}
using Statistics
function assigntreat(n,T;portiontreated=vcat(zeros(T ÷ 2), 0.5, zeros(T - (T ÷ 2) - 1)))
  treated = falses(n,T)
  for t=2:T
    treated[:,t] = treated[:,t-1]
    if (portiontreated[t]>0)
      treated[:,t] = (treated[:,t] .|| rand(n) .< portiontreated[t])
    end
  end
  return(treated)
end

function weights(D)
  D̃ = D .- mean(D,dims=1) .- mean(D,dims=2) .+ mean(D)
  ω = D̃./sum(D̃.^2)
end

n = 1000
T = 9
D = assigntreat(n,T)
y = randn(n,T)
sum(y.*weights(D))
```

```{julia}
n,T = size(D)
using DataFrames, FixedEffectModels, RegressionTables
df = DataFrame(id = vec((1:n)*ones(Int,T)'), t = vec(ones(Int,n)*(1:T)'), y = vec(y), D=vec(D))
m=reg(df, @formula(y ~ D + fe(t) + fe(id)))
regtable(m, render=AsciiTable())
```

## Weights with Single Treatment Time

```{julia}
using PlotlyLight

function plotp(D; width=900, height=300)
  n,T=size(D)
  plt=Plot()
  plt.layout=Config(xaxis=Config(title="time",tickvals=1:T),
                    yaxis=Config(title="Portion Treated"),
                    autosize=false,
                    width=width,
                    height=height)
  plt(x=1:T,y=vec(mean(D,dims=1)))
  plt()
end

pfig = plotp(D)
pfig
```

## Weights with Single Treatment Time

```{julia}
function plotweights(D; width=900, height=300)
  n,T = size(D)
  ω = weights(D)
  groups = unique(eachrow(D))
  plt = Plot()
  plt.layout=Config(xaxis=Config(title="time",tickvals=1:T),
                    yaxis=Config(title="weight"),
                    autosize=false,
                    width=width,
                    height=height)

  for g in groups
    i = findfirst(d == g for d in eachrow(D))
    wt = ω[i,:]
    plt(x=1:T,y=wt,name="Treated $(sum(g)) times", mode="markers",type="scatter")
    end
  fig=plt()
  return(fig)
end
fig = plotweights(D)
fig
```

## Weights with Uniform Treatment Time

```{julia}
D = assigntreat(n,T,portiontreated=vcat(0,fill(0.5/(T-1),T-1)))
pfig = plotp(D)
pfig
```

## Weights with Uniform Treatment Time

```{julia}
fig = plotweights(D)
fig
```

## Weights with Early and Late Treated

```{julia}
pt = zeros(T)
pt[2] = 1/3
pt[end-1]=1/3
D = assigntreat(n,T,portiontreated=pt)
pfig = plotp(D)
pfig
```
## Weights with Early and Late Treatde

```{julia}
fig = plotweights(D)
fig
```

## Sign Reversal with Fixed Effects


- True Treatment Effects
```{julia}
pt = zeros(T)
pt[2] = 1/3
pt[end-1]=1/3

function simulate(n,T,portiontreated, ATT, σ=0.01)
  D = assigntreat(n,T,portiontreated=portiontreated)
  y = randn(n,T)*σ
  for i in axes(y)[1]
    timetreated=cumsum(D[i,:])
    y[i,:] .+= (tt>0 ? ATT[tt] : 0.0 for tt in timetreated)
  end
  DataFrame(id = vec((1:n)*ones(Int,T)'), t = vec(ones(Int,n)*(1:T)'), y = vec(y), D=vec(D))
end

ATT =  vcat(ones(T-3),10*ones(3))
df = simulate(n,T, pt,ATT)

function plotGAT(ATT,D; width=900, height=300)
  n,T = size(D)
  groups = unique(eachrow(D))
  plt = Plot()
  plt.layout=Config(xaxis=Config(title="time",tickvals=1:T),
                    yaxis=Config(title="ATT"),
                    autosize=false,
                    width=width,
                    height=height)

  for g in groups
    t = findfirst(g)
    if (isnothing(t))
      t=T+1
    end
    ate = vcat(zeros(t-1), ATT[1:(T-t+1)])
    plt(x=1:T,y=ate,name="Treated $(sum(g)) times", mode="markers",type="scatter")
    end
  fig=plt()
  return(fig)
end

plotGAT(ATT,D)
```

## Sign Reversal with Fixed Effects

- Fixed Effects Estimate

```{julia}
#| echo: true
#| code-fold: false
m=reg(df, @formula(y ~ D + fe(t) + fe(id)))
regtable(m, render=AsciiTable())
```


## When to worry

- If multiple treatment times and treatment heterogeneity
- Even if weights do not have wrong sign, the fixed effects estimate is hard to interpret
- Same logic applies more generally -- not just to time
  - E.g. if have group effects, some treated units in multiple groups,
  and $E[y(1) - y(0) | group]$ varies

# What to Do?

## Plug-in Estimator

- Follow identification
$$
\begin{align*}
ATT_{t,t-s}& = \Er[y_{it} - y_{it-s} | D_{it}=1, D_{it-s}=0] - \Er[y_{it} - y_{it-s} | D_{it}=0, D_{it-s}=0]
\end{align*}
$$
and estimate
$$
\begin{align*}
\widehat{ATT}_{t,t-s} = & \frac{\sum_i y_{it} D_{it}(1-D_{it-s})}{\sum_i D_{it}(1-D_{it-s})} \\
& - \frac{\sum_i y_{it} (1-D_{it})(1-D_{it-s})}{\sum_i (1-D_{it})(1-D_{it-s})}
\end{align*}
$$
and perhaps some average, e.g. (there are other reasonable weighted averages)
$$
\sum_{t=1}^T \frac{\sum_i D_{it}}{\sum_{i,s} D_{i,s}} \frac{1}{t-1} \sum_{s=1}^{t-1} \widehat{ATT}_{t,t-s}
$$
  - Inference? Optimal?

## What to Do?

- Problem is possible correlation of $(y_{it}(1) - y_{it}(0))D_{it}$ with $\tilde{D}_{it}$
   - $\tilde{D}_{it}$ is function of $t$ and $(D_{i1}, ..., D_{iT})$
   - Estimating separate coefficient for each combination of $t$ and $(D_{i1}, ..., D_{iT})$ will eliminate correlation / flexibly model treatment effect heterogeneity

## Cohorts

- Cohorts = unique sequences of $(D_{i1}, ..., D_{iT})$
  - In last simulated example, three cohorts
      1. $(0, 0, 0, 0, 0, 0, 0, 0, 0)$
      2. $(0, 0, 0, 0, 0, 0, 0, 1, 1)$
      3. $(0, 1, 1, 1, 1, 1, 1, 1, 1)$

```{julia}
using CategoricalArrays

function createCohorts(df)
  n = length(unique(df.id))
  T = length(unique(df.t))
  sorted = sort(df, [:id, :t])
  D = reshape(sorted.D, T,n)'
  groups = sort(unique(eachrow(D)))
  cohorts = [findfirst(d == g for g in groups) for d in eachrow(D)]
  df=leftjoin(sorted, DataFrame(cohort=categorical(cohorts), id=unique(sorted.id)), on=:id)
  df.DCt .= "untreated"
  for r in 1:T
    for c in unique(df.cohort)
      dct = (df.t .== r) .& (df.cohort .== c) .& df.D
      if (any(dct))
        df.DCt[dct] .= "c$(c),t$(r)"
        df[!,"Dc$(c)t$(r)"] .= false
        df[!,"Dc$(c)t$(r)"][dct] .= true
      end
    end
  end
  df.ct = categorical(df.t)
  df
end

dfc = createCohorts(df);
```

## Regression with Cohort Interactions {.smaller}

```{julia}
m=reg(dfc, @formula(y ~ DCt + fe(id) + fe(t)))
regtable(m, render=AsciiTable())
```
## Regression with Cohort Interactions {.smaller}

```{julia}
m=reg(dfc, @formula(y ~ -1 + cohort*ct + fe(id)), save=:fe)
regtable(m, render=AsciiTable())
```

## What to Do?

- Understand existing methods: read reviews @dd2022, @roth2023, @dd2023
- Use an appropriate package:
   - partial list on [https://asjadnaqvi.github.io/DiD/](https://asjadnaqvi.github.io/DiD/)


# Pre-trends

## Pre-trends

- Parallel trends assumption

$$
\Er[\color{red}{y_{it}(0)} - y_{it-s}(0) | D_{it}=1,  D_{it-s}=0] = \Er[y_{it}(0) - y_{it-s}(0) | D_{it}=0, D_{it-s}=0]
$$

- More plausible if there are parallel pre-trends

$$
\begin{align*}
& \Er[y_{it-r}(0) - y_{it-s}(0) | D_{it}=1, D_{it-r}=0,  D_{it-s}=0] = \\
& = \Er[y_{it-r}(0) - y_{it-s}(0) | D_{it}=0, D_{it-r}=0, D_{it-s}=0]
\end{align*}
$$

- Always at least plot pre-trends

## Testing for Pre-trends

- Is it a good idea to test

$$
\begin{align*}
H_0 : & \Er[y_{it-r} - y_{it-s} | D_{it}=1, D_{it-r}=0,  D_{it-s}=0] = \\
& = \Er[y_{it-r} - y_{it-s} | D_{it}=0, D_{it-r}=0, D_{it-s}=0]?
\end{align*}
$$
  - Even if not testing formally, we do it informally by plotting

## Testing for Pre-trends

- Assume: $(y_{i1}, ..., y_{iT}, D_{i1},..., D_{iT})$ i.i.d. across $i$ with finite second moments
- Let
$$
\tau^{1t}_{r,s} = \Er[y_{ir}|D_{it}=1, D_{ir}=0, D_{is}=0]
$$
$$
\tau^{0t}_{r,s} = \Er[y_{ir}|D_{it}=0, D_{ir}=0, D_{is}=0]
$$
- Plugin estimators
$$
\hat{\tau}^{1t}_{r,s} = \frac{\sum_i y_{ir} D_{it}(1-D_{ir})(1-D_{is})} {\sum_i D_{it}(1-D_{ir})(1-D_{is})}
$$
$$
\hat{\tau}^{0t}_{r,s} = \frac{\sum_i y_{ir} (1-D_{it})(1-D_{ir})(1-D_{is})} {\sum_i (1-D_{it})(1-D_{ir})(1-D_{is})}
$$

## Testing for Pre-trends

- Note:
$$
\begin{align*}
\hat{\tau}^{1t}_{r,s} - \tau^{1t}_{r,s} = & \frac{\frac{1}{n}\sum_i y_{ir} D_{it}(1-D_{ir})(1-D_{is}) - \Er[y_{ir} D_{it}(1-D_{ir})(1-D_{is})]}{\Er[D_{it}(1-D_{ir})(1-D_{is})]} + \\
& + \frac{\Er[y_{it} D_{it}(1-D_{ir})(1-D_{is})]}{\Er[D_{it}(1-D_{ir})(1-D_{is})]^2} \left(\frac{1}{n} \sum_i D_{it}(1-D_{ir})(1-D_{is}) - \Er[D_{it}(1-D_{ir})(1-D_{is})] \right)
\end{align*}
$$
and similar expression for $\hat{\tau}^{0t}_{r,s}$
- Use CLT to get joint asymptotic distribution of pre-trends and $ATT_{t,t-s}$

## Testing for Pre-trends

- E.g. $T=3$, $D_{i3}=1$ for some $i$, other $D_{it}=0$
$$
\begin{align*}
\sqrt{n} \left[
\begin{pmatrix} \hat{\tau}^{13}_{2,1} - \hat{\tau}^{03}_{2,1} \\
\underbrace{\hat{\tau}^{13}_{3,2} - \hat{\tau}^{03}_{3,2}}_{\widehat{ATT}_{3,2}}
\end{pmatrix} -
\begin{pmatrix}
\tau^{13}_{2,1} - \tau^{03}_{2,1} \\
ATT_{3,2}
\end{pmatrix}
\right] \indist N(0, \Sigma)
\end{align*}
$$

- Distribution of $\widehat{ATT}_{3,2}$ conditional on fail to reject
$\tau^{13}_{2,1} - \tau^{03}_{2,1} = 0$ is a truncated normal

- @roth2022 : test can have low power, and in plausible violations, $\widehat{ATT}_{3,2}$ conditional on failing to reject is biased

## Bounds from Pre-trends

- Let $\Delta$ be violation of parallel trends
$$
\Delta = \Er[\color{red}{y_{it}(0)} - y_{it-1}(0) | D_{it}=1,  D_{it-1}=0] - \Er[y_{it}(0) - y_{it-1}(0) | D_{it}=0, D_{it-1}=0]
$$

- Assume $\Delta$ is bounded by deviation from parallel of pre-trends
$$
|\Delta| \leq M \max_{r} \left\vert \tau^{1t}_{t-r,t-r-1} - \tau^{0t}_{t-r,t-r-1} \right\vert
$$
for some chosen $M$

- See @rambachan2023


## Reading

- Book: @dd2023
- Recent reviews: @roth2023, @dd2022, @arkhangelsky2023
- Early work pointing to problems with fixed effects:
  - @laporte2005, @wooldridge2005
- Explosion of papers written just before 2020, published just after:
  - @borusyak2018
  - @dd2020
  - @callaway2021
  - @goodmanbacon2021
  - @sun2021



## References
